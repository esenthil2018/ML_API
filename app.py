# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WkNVBO6DkTNz2tH-SgIbgFY59LAqAaFC
"""

import streamlit as st
import tensorflow as tf
from PIL import Image, ImageOps
import numpy as np

# Load pretrained model
model = tf.keras.models.load_model('mnist_model.h5')

def predict_image(img):
    img = ImageOps.grayscale(img)
    img = img.resize((28, 28))
    img_array = np.array(img) / 255.0
    img_array = img_array.reshape(1, 28, 28)
    predictions = model.predict(img_array)
    predicted_class = np.argmax(predictions, axis=1)[0]
    return predicted_class

st.title("MNIST Digit Classifier")
uploaded_file = st.file_uploader("Upload an image of a handwritten digit", type="jpg")

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='Uploaded Image.', use_column_width=True)
    st.write("Predicting...")
    label = predict_image(image)
    st.write(f'Predicted label: {label}')